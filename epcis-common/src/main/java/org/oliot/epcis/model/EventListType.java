//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.07.04 at 12:30:56 PM KST 
//

package org.oliot.epcis.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;

/**
 * <p>
 * Java class for EventListType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="EventListType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="ObjectEvent" type="{urn:epcglobal:epcis:xsd:2}ObjectEventType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="AggregationEvent" type="{urn:epcglobal:epcis:xsd:2}AggregationEventType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="TransformationEvent" type="{urn:epcglobal:epcis:xsd:2}TransformationEventType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="TransactionEvent" type="{urn:epcglobal:epcis:xsd:2}TransactionEventType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="AssociationEvent" type="{urn:epcglobal:epcis:xsd:2}AssociationEventType" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="extension" type="{urn:epcglobal:epcis:xsd:2}EPCISEventListExtensionType"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;anyAttribute processContents='lax'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EventListType", propOrder = { "objectEventOrAggregationEventOrTransformationEvent" })
public class EventListType {

	@XmlElements({ @XmlElement(name = "ObjectEvent", type = ObjectEventType.class),
			@XmlElement(name = "AggregationEvent", type = AggregationEventType.class),
			@XmlElement(name = "TransformationEvent", type = TransformationEventType.class),
			@XmlElement(name = "TransactionEvent", type = TransactionEventType.class),
			@XmlElement(name = "AssociationEvent", type = AssociationEventType.class),
			@XmlElement(name = "extension", type = EPCISEventListExtensionType.class) })
	protected List<Object> objectEventOrAggregationEventOrTransformationEvent;
	@XmlAnyAttribute
	private Map<QName, String> otherAttributes = new HashMap<QName, String>();

	public void setObjectEventOrAggregationEventOrTransformationEvent(
			List<Object> objectEventOrAggregationEventOrTransformationEvent) {
		this.objectEventOrAggregationEventOrTransformationEvent = objectEventOrAggregationEventOrTransformationEvent;
	}

	public void setOtherAttributes(Map<QName, String> otherAttributes) {
		this.otherAttributes = otherAttributes;
	}

	/**
	 * Gets the value of the objectEventOrAggregationEventOrTransformationEvent
	 * property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a snapshot.
	 * Therefore any modification you make to the returned list will be present
	 * inside the JAXB object. This is why there is not a <CODE>set</CODE> method
	 * for the objectEventOrAggregationEventOrTransformationEvent property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getObjectEventOrAggregationEventOrTransformationEvent().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ObjectEventType } {@link AggregationEventType }
	 * {@link TransformationEventType } {@link TransactionEventType }
	 * {@link AssociationEventType } {@link EPCISEventListExtensionType }
	 * 
	 * 
	 */
	public List<Object> getObjectEventOrAggregationEventOrTransformationEvent() {
		if (objectEventOrAggregationEventOrTransformationEvent == null) {
			objectEventOrAggregationEventOrTransformationEvent = new ArrayList<Object>();
		}
		return this.objectEventOrAggregationEventOrTransformationEvent;
	}

	/**
	 * Gets a map that contains attributes that aren't bound to any typed property
	 * on this class.
	 * 
	 * <p>
	 * the map is keyed by the name of the attribute and the value is the string
	 * value of the attribute.
	 * 
	 * the map returned by this method is live, and you can add new attribute by
	 * updating the map directly. Because of this design, there's no setter.
	 * 
	 * 
	 * @return always non-null
	 */
	public Map<QName, String> getOtherAttributes() {
		return otherAttributes;
	}

}
