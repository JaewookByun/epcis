//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.08.30 at 03:25:42 PM KST 
//

package org.oliot.model.ale;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import org.w3c.dom.Element;

/**
 * <p>
 * Java class for ECReportOutputSpec complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="ECReportOutputSpec">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="extension" type="{urn:epcglobal:ale:xsd:1}ECReportOutputSpecExtension" minOccurs="0"/>
 *         &lt;any processContents='lax' namespace='##other' maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="includeEPC" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="includeTag" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="includeRawHex" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="includeRawDecimal" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="includeCount" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;anyAttribute processContents='lax'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ECReportOutputSpec", propOrder = { "extension", "any" })
public class ECReportOutputSpec {

	protected ECReportOutputSpecExtension extension;
	@XmlAnyElement(lax = true)
	protected List<Object> any;
	@XmlAttribute(name = "includeEPC")
	protected Boolean includeEPC;
	@XmlAttribute(name = "includeTag")
	protected Boolean includeTag;
	@XmlAttribute(name = "includeRawHex")
	protected Boolean includeRawHex;
	@XmlAttribute(name = "includeRawDecimal")
	protected Boolean includeRawDecimal;
	@XmlAttribute(name = "includeCount")
	protected Boolean includeCount;
	@XmlAnyAttribute
	private Map<QName, String> otherAttributes = new HashMap<QName, String>();

	/**
	 * Gets the value of the extension property.
	 * 
	 * @return possible object is {@link ECReportOutputSpecExtension }
	 * 
	 */
	public ECReportOutputSpecExtension getExtension() {
		return extension;
	}

	/**
	 * Sets the value of the extension property.
	 * 
	 * @param value
	 *            allowed object is {@link ECReportOutputSpecExtension }
	 * 
	 */
	public void setExtension(ECReportOutputSpecExtension value) {
		this.extension = value;
	}

	/**
	 * Gets the value of the any property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the any property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getAny().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Object }
	 * {@link Element }
	 * 
	 * 
	 */
	public List<Object> getAny() {
		if (any == null) {
			any = new ArrayList<Object>();
		}
		return this.any;
	}

	/**
	 * Gets the value of the includeEPC property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean isIncludeEPC() {
		if (includeEPC == null) {
			return false;
		} else {
			return includeEPC;
		}
	}

	/**
	 * Sets the value of the includeEPC property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setIncludeEPC(Boolean value) {
		this.includeEPC = value;
	}

	/**
	 * Gets the value of the includeTag property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean isIncludeTag() {
		if (includeTag == null) {
			return false;
		} else {
			return includeTag;
		}
	}

	/**
	 * Sets the value of the includeTag property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setIncludeTag(Boolean value) {
		this.includeTag = value;
	}

	/**
	 * Gets the value of the includeRawHex property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean isIncludeRawHex() {
		if (includeRawHex == null) {
			return false;
		} else {
			return includeRawHex;
		}
	}

	/**
	 * Sets the value of the includeRawHex property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setIncludeRawHex(Boolean value) {
		this.includeRawHex = value;
	}

	/**
	 * Gets the value of the includeRawDecimal property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean isIncludeRawDecimal() {
		if (includeRawDecimal == null) {
			return false;
		} else {
			return includeRawDecimal;
		}
	}

	/**
	 * Sets the value of the includeRawDecimal property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setIncludeRawDecimal(Boolean value) {
		this.includeRawDecimal = value;
	}

	/**
	 * Gets the value of the includeCount property.
	 * 
	 * @return possible object is {@link Boolean }
	 * 
	 */
	public boolean isIncludeCount() {
		if (includeCount == null) {
			return false;
		} else {
			return includeCount;
		}
	}

	/**
	 * Sets the value of the includeCount property.
	 * 
	 * @param value
	 *            allowed object is {@link Boolean }
	 * 
	 */
	public void setIncludeCount(Boolean value) {
		this.includeCount = value;
	}

	/**
	 * Gets a map that contains attributes that aren't bound to any typed
	 * property on this class.
	 * 
	 * <p>
	 * the map is keyed by the name of the attribute and the value is the string
	 * value of the attribute.
	 * 
	 * the map returned by this method is live, and you can add new attribute by
	 * updating the map directly. Because of this design, there's no setter.
	 * 
	 * 
	 * @return always non-null
	 */
	public Map<QName, String> getOtherAttributes() {
		return otherAttributes;
	}

}
